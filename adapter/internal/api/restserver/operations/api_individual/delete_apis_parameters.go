// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package api_individual

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewDeleteApisParams creates a new DeleteApisParams object
//
// There are no default values defined in the spec.
func NewDeleteApisParams() DeleteApisParams {

	return DeleteApisParams{}
}

// DeleteApisParams contains all the bound params for the delete apis operation
// typically these are obtained from a http.Request
//
// swagger:parameters DeleteApis
type DeleteApisParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Name of the API

	  Required: true
	  Max Length: 255
	  Min Length: 3
	  Pattern: ^[a-zA-Z0-9_~.-]*$
	  In: query
	*/
	APIName string
	/*Name of gateway environments separated by ":"

	  Max Length: 255
	  Pattern: ^[\w\s.-]*(:[\w\s.-]+)*$
	  In: query
	*/
	Environments *string
	/*version of the API

	  Required: true
	  Max Length: 15
	  Min Length: 1
	  Pattern: ^[a-zA-Z0-9_.-]*$
	  In: query
	*/
	Version string
	/*Virtual Host of the API

	  Max Length: 255
	  Pattern: ^(\*|(\*-|\*\.)?(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])(-\*|\.\*)?)$
	  In: query
	*/
	Vhost *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDeleteApisParams() beforehand.
func (o *DeleteApisParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qAPIName, qhkAPIName, _ := qs.GetOK("apiName")
	if err := o.bindAPIName(qAPIName, qhkAPIName, route.Formats); err != nil {
		res = append(res, err)
	}

	qEnvironments, qhkEnvironments, _ := qs.GetOK("environments")
	if err := o.bindEnvironments(qEnvironments, qhkEnvironments, route.Formats); err != nil {
		res = append(res, err)
	}

	qVersion, qhkVersion, _ := qs.GetOK("version")
	if err := o.bindVersion(qVersion, qhkVersion, route.Formats); err != nil {
		res = append(res, err)
	}

	qVhost, qhkVhost, _ := qs.GetOK("vhost")
	if err := o.bindVhost(qVhost, qhkVhost, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindAPIName binds and validates parameter APIName from query.
func (o *DeleteApisParams) bindAPIName(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("apiName", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("apiName", "query", raw); err != nil {
		return err
	}
	o.APIName = raw

	if err := o.validateAPIName(formats); err != nil {
		return err
	}

	return nil
}

// validateAPIName carries on validations for parameter APIName
func (o *DeleteApisParams) validateAPIName(formats strfmt.Registry) error {

	if err := validate.MinLength("apiName", "query", o.APIName, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("apiName", "query", o.APIName, 255); err != nil {
		return err
	}

	if err := validate.Pattern("apiName", "query", o.APIName, `^[a-zA-Z0-9_~.-]*$`); err != nil {
		return err
	}

	return nil
}

// bindEnvironments binds and validates parameter Environments from query.
func (o *DeleteApisParams) bindEnvironments(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.Environments = &raw

	if err := o.validateEnvironments(formats); err != nil {
		return err
	}

	return nil
}

// validateEnvironments carries on validations for parameter Environments
func (o *DeleteApisParams) validateEnvironments(formats strfmt.Registry) error {

	if err := validate.MaxLength("environments", "query", *o.Environments, 255); err != nil {
		return err
	}

	if err := validate.Pattern("environments", "query", *o.Environments, `^[\w\s.-]*(:[\w\s.-]+)*$`); err != nil {
		return err
	}

	return nil
}

// bindVersion binds and validates parameter Version from query.
func (o *DeleteApisParams) bindVersion(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("version", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("version", "query", raw); err != nil {
		return err
	}
	o.Version = raw

	if err := o.validateVersion(formats); err != nil {
		return err
	}

	return nil
}

// validateVersion carries on validations for parameter Version
func (o *DeleteApisParams) validateVersion(formats strfmt.Registry) error {

	if err := validate.MinLength("version", "query", o.Version, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("version", "query", o.Version, 15); err != nil {
		return err
	}

	if err := validate.Pattern("version", "query", o.Version, `^[a-zA-Z0-9_.-]*$`); err != nil {
		return err
	}

	return nil
}

// bindVhost binds and validates parameter Vhost from query.
func (o *DeleteApisParams) bindVhost(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.Vhost = &raw

	if err := o.validateVhost(formats); err != nil {
		return err
	}

	return nil
}

// validateVhost carries on validations for parameter Vhost
func (o *DeleteApisParams) validateVhost(formats strfmt.Registry) error {

	if err := validate.MaxLength("vhost", "query", *o.Vhost, 255); err != nil {
		return err
	}

	if err := validate.Pattern("vhost", "query", *o.Vhost, `^(\*|(\*-|\*\.)?(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])(-\*|\.\*)?)$`); err != nil {
		return err
	}

	return nil
}
