// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/config.proto

package org.wso2.gateway.discovery.config.enforcer;

public final class ConfigProto {
  private ConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_wso2_discovery_config_enforcer_Config_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+wso2/discovery/config/enforcer/config." +
      "proto\022\036wso2.discovery.config.enforcer\032)w" +
      "so2/discovery/config/enforcer/cert.proto" +
      "\032+wso2/discovery/config/enforcer/issuer." +
      "proto\032.wso2/discovery/config/enforcer/ev" +
      "ent_hub.proto\0323wso2/discovery/config/enf" +
      "orcer/am_credentials.proto\032,wso2/discove" +
      "ry/config/enforcer/service.proto\0322wso2/d" +
      "iscovery/config/enforcer/jwt_generator.p" +
      "roto\032/wso2/discovery/config/enforcer/thr" +
      "ottling.proto\032*wso2/discovery/config/enf" +
      "orcer/cache.proto\032.wso2/discovery/config" +
      "/enforcer/analytics.proto\"\204\005\n\006Config\022>\n\016" +
      "jwtTokenConfig\030\001 \003(\0132&.wso2.discovery.co" +
      "nfig.enforcer.Issuer\022;\n\010keystore\030\002 \001(\0132)" +
      ".wso2.discovery.config.enforcer.CertStor" +
      "e\022=\n\ntruststore\030\003 \001(\0132).wso2.discovery.c" +
      "onfig.enforcer.CertStore\022:\n\010eventhub\030\004 \001" +
      "(\0132(.wso2.discovery.config.enforcer.Even" +
      "tHub\022<\n\013authService\030\005 \001(\0132\'.wso2.discove" +
      "ry.config.enforcer.Service\022F\n\017apimCreden" +
      "tials\030\006 \001(\0132-.wso2.discovery.config.enfo" +
      "rcer.AmCredentials\022B\n\014jwtGenerator\030\007 \001(\013" +
      "2,.wso2.discovery.config.enforcer.JWTGen" +
      "erator\022D\n\020throttlingConfig\030\010 \001(\0132*.wso2." +
      "discovery.config.enforcer.Throttling\0224\n\005" +
      "cache\030\t \001(\0132%.wso2.discovery.config.enfo" +
      "rcer.Cache\022<\n\tanalytics\030\n \001(\0132).wso2.dis" +
      "covery.config.enforcer.AnalyticsB\213\001\n*org" +
      ".wso2.gateway.discovery.config.enforcerB" +
      "\013ConfigProtoP\001ZNgithub.com/envoyproxy/go" +
      "-control-plane/wso2/discovery/config/enf" +
      "orcer;enforcerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.wso2.gateway.discovery.config.enforcer.CertStoreProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.IssuerProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.EventHubProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.AmCredentialsProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.ServiceProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.JWTGeneratorProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.ThrottlingProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.CacheProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.AnalyticsProto.getDescriptor(),
        });
    internal_static_wso2_discovery_config_enforcer_Config_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_wso2_discovery_config_enforcer_Config_descriptor,
        new java.lang.String[] { "JwtTokenConfig", "Keystore", "Truststore", "Eventhub", "AuthService", "ApimCredentials", "JwtGenerator", "ThrottlingConfig", "Cache", "Analytics", });
    org.wso2.gateway.discovery.config.enforcer.CertStoreProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.IssuerProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.EventHubProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.AmCredentialsProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.ServiceProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.JWTGeneratorProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.ThrottlingProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.CacheProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.AnalyticsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
